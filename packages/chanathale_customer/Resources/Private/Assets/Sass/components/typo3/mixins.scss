@import "variables";

// styling for all h-tags
@mixin headingsWithClass {
  @for $i from 1 through 6 {
    h#{$i},
    .h#{$i} {
      font-size: var(--fs-h#{$i});
      @content
    }
  }
}

@mixin headings {
  @for $i from 1 through 6 {
    h#{$i} {
      @content
    }
  }
}

@mixin wordBreakAndHyphen {
  overflow-wrap: break-word;
  word-wrap: break-word;
  word-break: break-word;
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}

// add variables to the root Element so it is globally available
@mixin globalVariable {
  :root {
    @content
  }
}

// keyframes mixin
@mixin keyframes($name) {
  @-webkit-keyframes #{$name} {
    @content;
  }
  @-moz-keyframes #{$name} {
    @content;
  }
  @-ms-keyframes #{$name} {
    @content;
  }
  @keyframes #{$name} {
    @content;
  }
}

// styling image-pattern-top-left
@mixin image-pattern-top-left() {
  &.pattern::before {
    content: '';
    background-image: url('#{$url-image}/patterns/pattern-dots-white-top-left-teaser.svg');
    background-repeat: no-repeat;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
  }
}

// styling arrow-dotted-background-image
@mixin arrow-dotted-background-image($type, $dir) {
  background-image: url('#{$url-image}/icons/arrow-dotted-#{$type}-#{$dir}.svg');
}

// styling arrow-dotted
@mixin arrow-dotted($type, $dir) {
  content: '';
  display: block;
  width: 100%;
  height: 100%;
  background-position: center center;
  background-repeat: no-repeat;
  @include arrow-dotted-background-image($type, $dir);
}

// styling header-left
@mixin header-left($break-point) {
  @if($break-point == lg) {
    .header-left {
      max-width: 564px;
    }
  }

  @if($break-point == xl) {
    .header-left {
      max-width: 864px;
    }
  }
}

// styling teaser-header
@mixin teaser-header() {
  .teaser-header {
    line-height: 1.4 !important;
  }
}

// styling teaser-intro-text
@mixin teaser-intro-text() {
  .teaser-intro-text {
    margin-top: 1.6rem;
  }
}

// styling teaser-swiper-btn-group
@mixin teaser-swiper-btn-group() {
  .swiper-btn-group {
    margin-top: 4.8rem;
  }
}

// styling teaser-swiper-btns
@mixin teaser-swiper-btns {
  .swiper-button-next,
  .swiper-button-prev {
    position: relative;
    width: 48px;
    height: 48px;
    display: inline-block;
    margin-top: 0;
    top: unset;
    align-items: unset;
    justify-content: unset;
    z-index: unset;
    right: unset;
    background-color: var(--color-blue-100);
    border-radius: 30px;
    transition: background-color 300ms ease-out;

    &::after {
      @include arrow-dotted('white', 'right');
      transition: background-image 300ms ease-out;
    }

    &.swiper-button-disabled {
      opacity: 0.24;
    }

    &:not(.swiper-button-disabled) {
      &:active,
      &:focus {
        background-color: var(--color-green-100);

        &::after {
          @include arrow-dotted-background-image('blue', 'right');
        }
      }

      // hover-able device
      @media (hover: hover) and (pointer: fine) {
        &:hover {
          background-color: var(--color-green-100);

          &::after {
            @include arrow-dotted-background-image('blue', 'right');
          }
        }
      }
    }
  }

  .swiper-button-prev {
    margin-right: 3.0rem;
    transform: scaleX(-1);
  }
}

// styling card-group
@mixin card-group($break-point) {
  @if($break-point == s) {
    .card-group {
      > .card-box {
        background-image: unset;
        border-bottom: 0;
        padding-bottom: 0;
        background-size: unset;
        background-position: unset;
        background-repeat: unset;
        transition: 300ms color ease-out;
        display: block;
      }

      > .card-box + .card-box {
        margin-top: 4.0rem;
        margin-left: 0;
      }
    }
  }

  @if($break-point == sm) {
    .card-group {
      gap: 2.0rem;

      > .card-box + .card-box {
        margin-top: 0;
      }

      > .card-box {
        flex: 0 0 48.1% !important;
      }
    }
  }

  @if($break-point == lg) {
    .card-group {
      > .card-box {
        flex: 0 0 30.2333% !important;
      }

      .card {
        .card-wrapper {
          &::before {
            content: '';
            position: absolute;
            left: 0;
            top: 30px;
            height: 40px;
            border-left: 4px solid var(--color-green-100);
            transition: top 300ms ease-out, height 300ms ease-out;
          }
        }

        .card-body {
          padding: 3.6rem 2.8rem 0;
        }

        i.after-text {
          width: 48px;
          height: 48px;
          border: 1px solid var(--color-green-100);
          border-radius: 30px;
          display: block;
          transition: background-color 300ms ease-out;

          &::before {
            @include arrow-dotted('blue', 'right');
          }
        }
      }

      a:hover,
      a:focus,
      a:active {
        .card-wrapper {
          &::before {
            top: 0;
            height: 100%;
          }

          i.after-text {
            background-color: var(--color-green-100);
          }
        }
      }
    }
  }

  @if($break-point == xl) {
    .card-group {
      > .card-box {
        flex: 0 0 30.8333% !important;
      }
    }
  }

  @if($break-point == xxl) {
    .card-group {
      > .card-box {
        flex: 0 0 31.2333% !important;
      }
    }
  }
}

// styling card
@mixin card($disableLinks: 1) {
  .card {
    margin-bottom: 0;
    border: none;
    background-color: var(--color-bg-default);

    .image-zoom {
      .card-img-top {
        transition: 300ms transform ease-out;

        @include image-pattern-top-left();

        img {
          width: 100%;
        }
      }
    }

    .card-body {
      padding: 3.6rem 2.8rem;

      .card-date {
        margin-bottom: 1.6rem;
      }

      .card-title {
        margin-bottom: 1.6rem;
      }

      .card-text {
        font-size: var(--fs-teaser-text);
      }
    }

    .card-footer {
      background-color: unset;
      border: 0;
      border-top: none;
      border-radius: 0;
      position: relative;
      padding: 3.6rem 0 3.6rem 2.8rem;
    }

    @if($disableLinks == 1) {
      a {
        transition: unset;
        padding-bottom: 0;
        border-bottom: 0;
        background: unset;
      }
    }
  }
}

// styling swiper
@mixin swiper {
  .swiper {
    overflow: visible !important;
  }

  //.swiper:not(.swiper-no) {
  //  display: none;
  //}
}

// styling for not initialized state
@mixin swiper-not-initialized($parent) {
  #{$parent} .swiper:not(.swiper-initialized) .swiper-wrapper {
    --bs-gutter-x: 4rem;
    --swiper-slide-col-width: 100%;

    display: flex;
    width: auto;
    margin: 0 calc(var(--bs-gutter-x) * -0.5);

    .swiper-slide {
      padding-right: calc(var(--bs-gutter-x) * 0.5);
      padding-left: calc(var(--bs-gutter-x) * 0.5);
      flex: 0 0 auto;
      width: var(--swiper-slide-col-width);
    }
  }

  @include media-breakpoint-up(md) {
    #{$parent} .swiper:not(.swiper-initialized) .swiper-wrapper {
      --swiper-slide-col-width: 50%;
    }
  }

  @include media-breakpoint-up(xl) {
    #{$parent} .swiper:not(.swiper-initialized) .swiper-wrapper {
      --swiper-slide-col-width: 33.33333333%;
    }
  }
}

// styling swiper-wrapper
@mixin swiper-wrapper {
  .swiper-wrapper {
    gap: 0;

    > .card-box {
      flex: 1 0 auto !important;
    }
  }
}

// styling list-type-icon-arrow
@mixin list-type-default {
  ul,
  ol {
    padding-left: 4.8rem;
    margin-bottom: 4.8rem;

    &:last-child {
      margin-bottom: 0 !important;
    }

    li {
      line-height: 1.8;
    }

    li + li {
      margin-top: 1rem;
    }
  }
}

// styling list-type-icon-arrow
@mixin list-type-icon-arrow {
  ul.list-icon {
    list-style-type: none;
    padding-left: 2.9rem;

    li {
      display: flex;
    }

    li + li {
      margin-top: 1.6rem;
    }

    li {
      &::before {
        width: 32px;
        height: 32px;
        border: 1px solid var(--color-green-100);
        border-radius: 30px;
        display: block;
        content: "";
        flex: 0 0 32px;
        margin-right: 1.6rem;
        align-self: center;
        background-repeat: no-repeat;
        background-position: center center;
        background-size: 55%;
      }

      a {
        background-size: unset;
        background-repeat: unset;
        background-image: unset;
        border-bottom: unset;
        padding-bottom: unset;
      }
    }

    &.list-icon--arrow {
      margin-left: 2.9rem;

      li {
        display: list-item;
        padding: 0 0 10px 10px;

        a {
          background-image:
            linear-gradient(
                transparent 2px,
                var(--color-green-100) 2px,
                var(--color-green-100) 4px,
                transparent 4px
            ),
            linear-gradient(
                transparent 2px,
                var(--color-blue-100) 2px,
                var(--color-blue-100) 4px,
                transparent 4px
            );
          background-size: 0 6px, 100% 6px;
          background-position: 0 bottom, 0 bottom;
          background-repeat: no-repeat;
          padding-bottom: 4px;
          border-bottom: 6px solid transparent;

          &:hover {
            color: var(--color-green-100) !important;
            background-size: 100% 6px;
          }
        }
      }

      li::before {
        border: unset;
        border-radius: unset;
        background-image: url('#{$url-image}/icons/arrow-dotted-green-right.svg');
        display: inline-block;
        flex: unset;
        margin-left: -50px;
        padding-right: 18px;
        margin-bottom: -10px;
      }
    }
  }
}

// styling teaser grid and slider
// 1 teaser
// 2 teaser
// > 2 teaser
@mixin teaser-grid-slider($break-point, $tag) {
  @if($break-point == s) {
    //.swiper-nav-1 {
    //  display: none;
    //}

    .swiper,
    .swiper-no {
      margin-top: 5.5rem;
    }

    // mehrspalter-teaser-mit-bildern Slider + Knowhow Teaser Slider
    .swiper {
      > .card-group {
        flex-flow: nowrap;
        gap: 0 !important;
      }
    }

    // mehrspalter-teaser-mit-bildern Grid
    .swiper-no {
      > .card-group {
        display: grid !important;
        grid-template-columns: 1fr !important;
        gap: 4.0rem !important;

        > #{$tag} + #{$tag} {
          margin-top: 0 !important;
        }
      }
    }
  }

  @if($break-point == sm) {

  }

  @if($break-point == md) {
    //.swiper-nav-2 {
    //  display: none;
    //}

    // mehrspalter-teaser-mit-bildern Slider & Grid + Knowhow Teaser Slider
    .swiper,
    .swiper-no {
      &.swiper-1 {
        > .card-group {
          justify-content: center;

          > .swiper-slide,
          > .card-box {
            flex: 0 0 525px !important;
          }
        }
      }
    }

    // mehrspalter-teaser-mit-bildern Grid
    .swiper-no {
      > .card-group {
        grid-template-columns: 1fr 1fr !important;
      }

      &.swiper-1 {
        > .card-group {
          display: flex !important;
        }
      }
    }
  }

  @if($break-point == lg) {

  }

  @if($break-point == xl) {
    //.swiper-nav-3 {
    //  display: none;
    //}

    .swiper,
    .swiper-no {
      &.swiper-2 {
        > .card-group {
          justify-content: center;
        }
      }
    }

    // mehrspalter-teaser-mit-bildern Grid
    .swiper-no {
      > .card-group {
        grid-template-columns: 1fr 1fr 1fr !important;
      }

      &.swiper-2 {
        > .card-group {
          display: flex !important;
        }
      }
    }
  }

  @if($break-point == xxl) {
    .swiper,
    .swiper-no {
      &.swiper-2 {
        > .card-group {
          > .swiper-slide,
          > .card-box {
            flex: 0 0 525px !important;
          }
        }
      }
    }
  }
}

// styling btn-group
@mixin btn-group($break-point) {
  @if($break-point == s) {
    .btn-group {
      margin-bottom: 4.8rem;
      display: grid;
      gap: 0;
      row-gap: 2.4rem;

      .active {
        pointer-events: none;
      }

      .button + .button {
        margin-top: 0 !important;
      }

      .button {
        padding: 1.9rem 3.2rem;
        transition: unset !important;

        @include wordBreakAndHyphen;

        &.active {
          background-color: var(--color-green-100);
        }

        &:hover,
        &:active,
        &:focus {
          color: var(--color-green-100) !important;
          background: none !important;
        }
      }
    }
  }

  @if($break-point == sm) {
    .btn-group {
      .button:nth-child(even) {
        border-left: unset !important;
      }
    }
  }

  @if($break-point == md) {
    .btn-group {
      .button:nth-child(even) {
        border-left: 2px solid var(--color-green-100) !important;
      }

      .button:nth-child(2n+2),
      .button:nth-child(4n+3), {
        border-left: unset !important;
      }
    }
  }

  @if($break-point == lg) {
    .btn-group {
      .button:nth-child(2n+2),
      .button:nth-child(4n+3), {
        border-left: 2px solid var(--color-green-100) !important;
      }

      .button:nth-child(2n+2),
      .button:nth-child(6n+3),
      .button:nth-child(6n+5) {
        border-left: unset !important;
      }
    }
  }
}
